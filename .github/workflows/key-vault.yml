name: Deploy Azure Key Vault via Terraform

on:
  workflow_dispatch: {}
  push:
    branches:
      - main

permissions:
  id-token: write  # For GitHub OIDC login
  contents: read

jobs:
  deploy:
    name: Bootstrap Key Vault
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: environments/dev

    steps:
      # -- Checkout source code
      - name: Checkout code
        uses: actions/checkout@v3

      # -- Cache Terraform plugins
      - name: Cache Terraform plugin directory
        uses: actions/cache@v3
        with:
          path: ~/.terraform.d/plugin-cache
          key: terraform-plugins-${{ runner.os }}-${{ hashFiles('**/.terraform.lock.hcl') }}
          restore-keys: terraform-plugins-${{ runner.os }}-

      # -- Azure OIDC login
      - name: Log in to Azure with OIDC
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      # -- Set up Terraform CLI with plugin cache
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.7

      # -- Use local config to point to plugin cache
      - name: Create Terraform CLI config
        run: |
          echo 'plugin_cache_dir = "$HOME/.terraform.d/plugin-cache"' > terraform.rc
        shell: bash

      # ---------- Pre-checks (Lint & Security) ----------
      - name: Terraform Validate
        run: terraform validate
        env:
          TF_CLI_CONFIG_FILE: ${{ github.workspace }}/terraform.rc

      - name: Run TFLint
        uses: terraform-linters/tflint-action@v1

      - name: Run tfsec
        uses: aquasecurity/tfsec-action@v1.0.0

      # ---------- Terraform Init/Plan/Apply ----------
      - name: Terraform Init
        run: terraform init
        env:
          TF_CLI_CONFIG_FILE: ${{ github.workspace }}/terraform.rc

      - name: Terraform Plan
        run: terraform plan -out=tfplan -var="tenant_id=${{ secrets.AZURE_TENANT_ID }}"
        env:
          TF_CLI_CONFIG_FILE: ${{ github.workspace }}/terraform.rc

      - name: Terraform Apply
        run: terraform apply -auto-approve tfplan
        env:
          TF_CLI_CONFIG_FILE: ${{ github.workspace }}/terraform.rc
