name: Deploy Azure Key Vault

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  id-token: write
  contents: read
  pull-requests: write

jobs:
  lint:
    name: Run TFLint via GHCR
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Pull TFLint Docker image from GHCR
        run: docker pull ghcr.io/rraj7/tflint-azure:latest

      - name: Run TFLint inside container
        id: tflint
        run: |
          docker run --rm \
            -v "${{ github.workspace }}:/workspace" \
            -w "/workspace/environments/dev" \
            ghcr.io/rraj7/tflint-azure:latest \
            --config "/workspace/.tflint.hcl" --recursive

      - name: Comment on PR if lint fails
        if: failure()
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          message: |
            ðŸš¨ **TFLint failed** in this pull request.
            Please fix the linting errors before merging.

  deploy:
    name: Deploy Azure Infra
    runs-on: ubuntu-latest
    needs: lint

    env:
      TF_VAR_tenant_id: ${{ secrets.AZURE_TENANT_ID }}
      TF_VAR_subscription_id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      TF_VAR_env_name: DEV
      TF_CLI_CONFIG_FILE: terraform.rc

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Print repo directory structure (debug ðŸ”Ž)
        run: |
          echo "âœ… PWD:"
          pwd
          echo "âœ… Top-level contents:"
          ls -la
          echo "âœ… Recursive tree: "
          ls -R

      - name: Azure Login with OIDC
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Setup Terraform CLI
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.7

      - name: Create Terraform CLI Config
        run: echo 'plugin_cache_dir = "$HOME/.terraform.d/plugin-cache"' > terraform.rc

      - name: Terraform Init
        run: terraform init
        working-directory: environments/DEV

      # - name: Terraform Format Check
      #   run: terraform fmt -check -recursive
      #   working-directory: environments/DEV

      - name: Terraform Validate
        run: terraform validate
        working-directory: environments/DEV

      - name: Terraform Plan
        run: terraform plan -out=tfplan
        working-directory: environments/DEV

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main'
        run: terraform apply -auto-approve tfplan
        working-directory: environments/DEV
